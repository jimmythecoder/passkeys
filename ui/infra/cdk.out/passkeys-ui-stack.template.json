{
 "Resources": {
  "passkeys3bucket7C7E1BE7": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "passkeys.jharris.nz",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:0ce7ad24",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkey-s3-bucket/Resource"
   }
  },
  "passkeys3bucketPolicyFA9D1874": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "passkeys3bucket7C7E1BE7"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "passkeys3bucket7C7E1BE7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "passkeys3bucket7C7E1BE7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "oai7A77E975",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "passkeys3bucket7C7E1BE7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "passkeys3bucket7C7E1BE7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "oai7A77E975",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "passkeys3bucket7C7E1BE7",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkey-s3-bucket/Policy/Resource"
   }
  },
  "passkeys3bucketAutoDeleteObjectsCustomResource19B0E9B8": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "passkeys3bucket7C7E1BE7"
    }
   },
   "DependsOn": [
    "passkeys3bucketPolicyFA9D1874"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkey-s3-bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-427820939238-ap-southeast-2",
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "passkeys3bucket7C7E1BE7"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "oai7A77E975": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "OAI passkeys.jharris.nz"
    }
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/oai/Resource"
   }
  },
  "certificateEC031123": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "jharris.nz",
    "DomainValidationOptions": [
     {
      "DomainName": "jharris.nz",
      "HostedZoneId": "Z0324600191ZXCBZ5ARGI"
     },
     {
      "DomainName": "passkeys-api.jharris.nz",
      "HostedZoneId": "Z0324600191ZXCBZ5ARGI"
     }
    ],
    "SubjectAlternativeNames": [
     "passkeys-api.jharris.nz"
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "passkeys-ui-stack/certificate"
     }
    ],
    "ValidationMethod": "DNS"
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/certificate/Resource"
   }
  },
  "sparewrite1F96A58C": {
   "Type": "AWS::CloudFront::Function",
   "Properties": {
    "AutoPublish": true,
    "FunctionCode": "function handler(event) {\n    var request = event.request;\n\n    // Redirect to index.html for requests to the root path or any path that for SPA routes (React Router, Vue Router, etc)\n    if (request.uri.endsWith(\"/\") || !request.uri.includes(\".\")) {\n        request.uri = \"/index.html\";\n    }\n\n    return request;\n}\n",
    "FunctionConfig": {
     "Comment": "ap-southeast-2passkeysuistacksparewriteDC7FFE30",
     "Runtime": "cloudfront-js-1.0"
    },
    "Name": "ap-southeast-2passkeysuistacksparewriteDC7FFE30"
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/spa-rewrite/Resource"
   }
  },
  "passkeyscache8AB926E4": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": "Web Cache policy passkeys.jharris.nz",
     "DefaultTTL": 60,
     "MaxTTL": 60,
     "MinTTL": 0,
     "Name": "passkeysuistackpasskeyscacheF3BF6887-ap-southeast-2",
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": true,
      "EnableAcceptEncodingGzip": true,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkeys-cache/Resource"
   }
  },
  "assetscache4CE6717C": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": "Assets Cache policy passkeys.jharris.nz",
     "DefaultTTL": 2592000,
     "MaxTTL": 2592000,
     "MinTTL": 86400,
     "Name": "passkeysuistackassetscacheA10D0CC3-ap-southeast-2",
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": true,
      "EnableAcceptEncodingGzip": true,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/assets-cache/Resource"
   }
  },
  "cdnLoggingBucket36AD0574": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/cdn/LoggingBucket/Resource"
   }
  },
  "cdnE31FB0B1": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      "passkeys.jharris.nz"
     ],
     "CacheBehaviors": [
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS",
        "PUT",
        "PATCH",
        "POST",
        "DELETE"
       ],
       "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
       "Compress": true,
       "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
       "PathPattern": "/api/*",
       "TargetOriginId": "passkeysuistackcdnOrigin2E695C4D9",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD",
        "OPTIONS",
        "PUT",
        "PATCH",
        "POST",
        "DELETE"
       ],
       "CachePolicyId": {
        "Ref": "assetscache4CE6717C"
       },
       "Compress": true,
       "PathPattern": "/assets/*",
       "TargetOriginId": "passkeysuistackcdnOrigin38D4D87DB",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "Comment": "CDN for passkeys.jharris.nz",
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "CachePolicyId": {
       "Ref": "passkeyscache8AB926E4"
      },
      "Compress": true,
      "FunctionAssociations": [
       {
        "EventType": "viewer-request",
        "FunctionARN": {
         "Fn::GetAtt": [
          "sparewrite1F96A58C",
          "FunctionARN"
         ]
        }
       }
      ],
      "TargetOriginId": "passkeysuistackcdnOrigin19E6839B7",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2and3",
     "IPV6Enabled": true,
     "Logging": {
      "Bucket": {
       "Fn::GetAtt": [
        "cdnLoggingBucket36AD0574",
        "RegionalDomainName"
       ]
      }
     },
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "passkeys3bucket7C7E1BE7",
         "RegionalDomainName"
        ]
       },
       "Id": "passkeysuistackcdnOrigin19E6839B7",
       "OriginShield": {
        "Enabled": true,
        "OriginShieldRegion": "ap-southeast-2"
       },
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "oai7A77E975"
           }
          ]
         ]
        }
       }
      },
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": "passkeys-api.jharris.nz",
       "Id": "passkeysuistackcdnOrigin2E695C4D9"
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "passkeys3bucket7C7E1BE7",
         "RegionalDomainName"
        ]
       },
       "Id": "passkeysuistackcdnOrigin38D4D87DB",
       "OriginShield": {
        "Enabled": true,
        "OriginShieldRegion": "ap-southeast-2"
       },
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "oai7A77E975"
           }
          ]
         ]
        }
       }
      }
     ],
     "PriceClass": "PriceClass_All",
     "ViewerCertificate": {
      "AcmCertificateArn": "arn:aws:acm:us-east-1:427820939238:certificate/8c4e5316-442b-41f0-befe-b068653febda",
      "MinimumProtocolVersion": "TLSv1.2_2021",
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/cdn/Resource"
   }
  },
  "passkeysbucketdeploymentAwsCliLayerAECC7133": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-427820939238-ap-southeast-2",
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkeys-bucket-deployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "passkeysbucketdeploymentCustomResource2CF29C45": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-427820939238-ap-southeast-2"
    ],
    "SourceObjectKeys": [
     "d29ab5b702315c363fc7f8ce4b3231df28db89b9326d659ebcbf00244a107d07.zip"
    ],
    "DestinationBucketName": {
     "Ref": "passkeys3bucket7C7E1BE7"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "cdnE31FB0B1"
    },
    "DistributionPaths": [
     "/*"
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkeys-bucket-deployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-427820939238-ap-southeast-2",
        "arn:aws:s3:::cdk-hnb659fds-assets-427820939238-ap-southeast-2/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "passkeys3bucket7C7E1BE7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "passkeys3bucket7C7E1BE7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-427820939238-ap-southeast-2",
     "S3Key": "e976a796f036a5efbf44b99e44cfb5a961df08d8dbf7cd37e60bf216fb982a00.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "passkeysbucketdeploymentAwsCliLayerAECC7133"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.e976a796f036a5efbf44b99e44cfb5a961df08d8dbf7cd37e60bf216fb982a00",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "passkeysdomain7B327C17": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "cdnE31FB0B1",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z0324600191ZXCBZ5ARGI",
    "Name": "passkeys.jharris.nz.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkeys-domain/Resource"
   }
  },
  "passkeysapiroleACD0888A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     "arn:aws:iam::427820939238:policy/AWSLambdaDynamoDBRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/passkeys-api-role/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21SwW7CMAz9lt1DxkDTdoUipEmbhoq0axUStzOkCYoTEKr670tSRpm0k99zbOe9ODP+NHvh0wdxpolUh4nGHe+2XsgDi6mqoznvlkEewLOiNlc0hI3VKC9j+soHshQEPZPaBlU7azzvPh02aBZSAtGbAuPR5+Yi1axTzb8V62CkR2tS6YiF/Ibx/nu6QvIOd+G3555HQeA81iiFh1YY0YDjXTHm8rCR9ozmVafgqO2ljXr44G11SzBBBJ74IoWeadHulIgTa/MuLuC+wFGSsUXTaPB2NPCfq56haHlXWp115Dh6HFDPnA0enuNWFiVI61QuzWgbJfSsCORtWwLZ4OQw6Ib/HG2cPaEClzbFsoG49vj+Dbs1DH4qnbxU8TtIjXxxpkJjtpeGf4jjMfb0zFgFfE+Pp9mUv8YPtSfEiQtxiS3wcog/sB5i9m0CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "passkeys-ui-stack/CDKMetadata/Default"
   }
  }
 },
 "Mappings": {
  "AWSCloudFrontPartitionHostedZoneIdMap": {
   "aws": {
    "zoneId": "Z2FDTNDATAQYW2"
   },
   "aws-cn": {
    "zoneId": "Z3RFFRIM2A3IF5"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}